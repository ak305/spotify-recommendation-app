/*! gulp-boilerplate v4.2.3 | (c) 2017 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/Plugin */
!function(){"use strict";function e(e,r,t,n,a){function s(e){return angular.isObject(e)?e:{name:e}}function o(e){var r=e?u.vegetables.filter(l(e)):[];return r}function l(e){var r=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(r)||0===e._lowerartist.indexOf(r)}}function i(){var e=[];for(var r in u.playlists){console.log(u.playlists[r].track.name,u.playlists[r].track.artists[0].name);var t={name:u.playlists[r].track.name,artist:u.playlists[r].track.artists[0].name};e.push(t)}return e.map(function(e){return e._lowername=e.name.toLowerCase(),e._lowerartist=e.artist.toLowerCase(),e})}function c(){var r=t.defer();return console.log("GETTING SAVED TRACKS"),e.get("/api/me/tracks").success(function(e){console.log(e),u.playlists=e.items,r.resolve(e)}).error(function(e){r.reject(e),console.log("Error: "+e)}),r.promise}var u=this;if(console.log(a.url()),/access_token/.test(a.url())&&/refresh_token/.test(a.url())){u.authenticated=!0;var f=c();f.then(function(e){u.readonly=!1,u.selectedItem=null,u.searchText=null,u.querySearch=o,u.vegetables=i(),u.selectedVegetables=[],u.numberChips=[],u.numberChips2=[],u.numberBuffer="",u.autocompleteDemoRequireMatch=!0,u.transformChip=s,u.accessToken="",u.refreshToken="",u.userId=""})}}angular.module("MyApp",["ngMaterial","ngCookies"]).controller("SpotifyController",e)}();