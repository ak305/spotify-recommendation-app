/*! gulp-boilerplate v4.2.3 | (c) 2017 Chris Ferdinandi | MIT License | http://github.com/cferdinandi/Plugin */
!function(){"use strict";function e(e,r,t,s,n){function a(e){return angular.isObject(e)?e:{name:e}}function i(e){var r=e?l.songs.filter(o(e)):[];return r}function o(e){var r=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(r)||0===e._lowerartist.indexOf(r)}}function c(){l.readonly=!1,l.selectedItem=null,l.searchText=null,l.querySearch=i,l.selectedSongs=[],l.numberChips=[],l.numberChips2=[],l.numberBuffer="",l.autocompleteDemoRequireMatch=!0,l.transformChip=a;var e=l.songs;return e.map(function(e){return e._lowername=e.name.toLowerCase(),e._lowerartist=e.artist.toLowerCase(),e})}function u(){var r=t.defer();return e.get("/api/getUserPlaylists",{params:{user_id:s.get("user_id")}}).success(function(e){for(var t in e.items){var s={name:e.items[t].name,id:e.items[t].id};l.playlists.push(s)}r.resolve(e)}).error(function(e){r.reject(e),console.log("Error: "+e)}),r.promise}var l=this;if(console.log(n.url()),/access_token/.test(n.url())&&/refresh_token/.test(n.url())){l.authenticated=!0,l.playlists=[];var m=u();m.then(function(e){l.readonly=!1,l.selectedItem=null,l.searchText=null,l.querySearch=i,l.selectedSongs=[],l.numberChips=[],l.numberChips2=[],l.numberBuffer="",l.autocompleteDemoRequireMatch=!0,l.transformChip=a,l.accessToken="",l.refreshToken="",l.userId="",l.recommendations=[],l.songs=[],l.loggedIn=!0,l.playlistSelected=!1,l.noCache=!0})}else l.loggedIn=!1;l.getMySavedTracks=function(){var r=t.defer();return e.get("/api/me/tracks").success(function(e){l.songs=[];for(var t in e.items){var s={name:e.items[t].track.name,artist:e.items[t].track.artists[0].name,id:e.items[t].track.id,artist_id:e.items[t].track.artists[0].id};l.songs.push(s)}c(),l.playlistSelected=!0,r.resolve(e)}).error(function(e){r.reject(e),console.log("Error: "+e)}),r.promise},l.getPlaylistsTracks=function(r){var n=t.defer();return e.get("/api/getPlaylistsTracks",{params:{user_id:s.get("user_id"),playlist_id:r.id}}).success(function(e){l.songs=[];for(var r in e.tracks.items){var t={name:e.tracks.items[r].track.name,artist:e.tracks.items[r].track.artists[0].name,id:e.tracks.items[r].track.id,artist_id:e.tracks.items[r].track.artists[0].id};l.songs.push(t)}c(),l.playlistSelected=!0,n.resolve(e)}).error(function(e){n.reject(e),console.log("Error: "+e)}),n.promise},l.getRecommendations=function(){var r=t.defer(),s=[],n=[];for(var a in l.selectedSongs)s.push(l.selectedSongs[a].artist_id),n.push(l.selectedSongs[a].id);return e.post("/api/getRecommendations",{params:{seed_artists:s,seed_tracks:n}}).success(function(e){for(var t in e.tracks){var s={song:e.tracks[t].name,artist:e.tracks[t].artists[0].name,uri:"https://embed.spotify.com/?uri="+e.tracks[t].uri};l.recommendations.push(s)}c(),l.playlistSelected=!0,r.resolve(e)}).error(function(e){r.reject(e),console.log("Error: "+e)}),r.promise}}angular.module("MyApp",["ngMaterial","ngCookies"]).controller("SpotifyController",e).filter("trusted",["$sce",function(e){return function(r){return e.trustAsResourceUrl(r)}}])}();